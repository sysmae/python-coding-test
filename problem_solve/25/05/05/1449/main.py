# https://www.acmicpc.net/problem/1449

# 문제
# 항승이는 품질이 심각하게 나쁜 수도 파이프 회사의 수리공이다. 항승이는 세준 지하철 공사에서 물이 샌다는 소식을 듣고 수리를 하러 갔다.

# 파이프에서 물이 새는 곳은 신기하게도 가장 왼쪽에서 정수만큼 떨어진 거리만 물이 샌다.

# 항승이는 길이가 L인 테이프를 무한개 가지고 있다.

# 항승이는 테이프를 이용해서 물을 막으려고 한다. 항승이는 항상 물을 막을 때, 적어도 그 위치의 좌우 0.5만큼 간격을 줘야 물이 다시는 안 샌다고 생각한다.

# 물이 새는 곳의 위치와, 항승이가 가지고 있는 테이프의 길이 L이 주어졌을 때, 항승이가 필요한 테이프의 최소 개수를 구하는 프로그램을 작성하시오. 테이프를 자를 수 없고, 테이프를 겹쳐서 붙이는 것도 가능하다.

# 입력
# 첫째 줄에 물이 새는 곳의 개수 N과 테이프의 길이 L이 주어진다. 둘째 줄에는 물이 새는 곳의 위치가 주어진다. N과 L은 1,000보다 작거나 같은 자연수이고, 물이 새는 곳의 위치는 1,000보다 작거나 같은 자연수이다.

# 출력
# 첫째 줄에 항승이가 필요한 테이프의 개수를 출력한다.

# 예제 입력 1 
# 4 2
# 1 2 100 101
# 예제 출력 1 
# 2

# 예제 입력 2 
# 4 3
# 1 2 3 4
# 예제 출력 2 
# 2

# 예제 입력 3 
# 3 1
# 3 2 1
# 예제 출력 3 
# 3

import sys
input = sys.stdin.readline
n,l = map(int,input().split())
coord = [False] * 1001 # 0~1000까지의 좌표를 False로 초기화
for i in map(int, input().split()):
    coord[i] = True # 물이 새는 곳의 좌표를 True로 설정
cnt = 0 # 테이프 개수

x = 0 # 현재 위치
while x<=1000:
    if coord[x]: # 물이 새는 곳이면
        cnt += 1 # 테이프 개수 증가
        x += l # 테이프 길이만큼 이동
    else:
        x += 1 # 물이 새지 않는 곳이면 다음 좌표로 이동
print(cnt) # 테이프 개수 출력

# 참고
# 만약 물 새는 위치가 1000이 아니라 십억 같이 큰 수라면 coord 리스트를 사용하지 않고, 물이 새는 위치만을 사용할 수 있다.
# 이런 방식을 좌표 압축이라고 한다.
# coord = list(map(int, input().split()))
# coord.sort() # 물이 새는 위치 정렬