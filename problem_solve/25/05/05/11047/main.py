# https://www.acmicpc.net/problem/11047

# 문제
# 준규가 가지고 있는 동전은 총 N종류이고, 각각의 동전을 매우 많이 가지고 있다.

# 동전을 적절히 사용해서 그 가치의 합을 K로 만들려고 한다. 이때 필요한 동전 개수의 최솟값을 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 10, 1 ≤ K ≤ 100,000,000)

# 둘째 줄부터 N개의 줄에 동전의 가치 Ai가 오름차순으로 주어진다. (1 ≤ Ai ≤ 1,000,000, A1 = 1, i ≥ 2인 경우에 Ai는 Ai-1의 배수)

# 출력
# 첫째 줄에 K원을 만드는데 필요한 동전 개수의 최솟값을 출력한다.

# 예제 입력 1 
# 10 4200
# 1
# 5
# 10
# 50
# 100
# 500
# 1000
# 5000
# 10000
# 50000
# 예제 출력 1 
# 6
# 예제 입력 2 
# 10 4790
# 1
# 5
# 10
# 50
# 100
# 500
# 1000
# 5000
# 10000
# 50000
# 예제 출력 2 
# 12


# Ai 는 Ai-1의 배수이므로 그리디로 풀 수 있다.
# 큰 단위 부터 동전을 사용하면 된다.
# 동전의 개수를 세는 변수를 만들고, K가 0이 될 때까지 반복한다.

import sys
input = sys.stdin.readline

n,k = input().split()
n = int(n)
k = int(k)
coins=[]
count = 0

for i in range(n):
  coins.append(int(input()))
coins.reverse() # 큰 단위 부터 동전을 사용하기 위해서 reverse()를 사용했다.

for coin in coins:
  if k == 0:
    break
  count += (k // coin) # 동전의 개수를 세는 변수에 동전의 개수를 더한다.
  k = k % coin # K를 동전으로 나눈 나머지로 바꾼다.
print(count) # 동전의 개수를 출력한다.
