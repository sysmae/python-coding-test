# Selection Sort 수도코드 (SelectionSort)

selectionSort(A[], n):
    Sort A[0 ... n-1]
    for last ← n-1 downto 1
        Find the largest element in A[0 ... last], say A[k]
        A[k] ↔ A[last]    ▷ Swap A[k] and A[last]


### 한국어 설명

Selection Sort(선택 정렬)는 배열의 마지막 원소부터 차례로 정렬하는 간단한 정렬 알고리즘입니다. 전체 과정은 다음과 같습니다:

1. **마지막 인덱스부터 1까지 반복**
   배열의 끝에서부터 시작해서, 각 단계마다 아직 정렬되지 않은 부분(0번부터 last번 인덱스까지)에서 가장 큰 값을 찾습니다.

2. **가장 큰 값의 위치(k)를 찾기**
   현재 남아있는 구간(0~last)에서 최대값을 가진 인덱스 k를 찾습니다.

3. **최대값과 마지막 값 교환**
   찾은 최대값(A[k])을 현재 구간의 마지막 원소(A[last])와 교환합니다.

이 과정을 n-1번 반복하면 배열 전체가 오름차순으로 정렬됩니다.
즉, 한 번 반복할 때마다 가장 큰 값을 맨 뒤로 보내는 방식입니다.
선택 정렬은 구현이 매우 간단하지만, 항상 \(O(n^2)\)의 시간이 걸린다는 단점이 있습니다[1].

---

#### 예시

초기 배열:
`8, 31, 48, 73, 3, 65, 20, 29, 11, 15`

1. 0~9에서 73(3번 인덱스) → 15(9번 인덱스)와 교환
2. 0~8에서 65(5번 인덱스) → 11(8번 인덱스)와 교환
3. ...
   이런 식으로 진행하여 최종적으로 배열이 오름차순이 됩니다.

